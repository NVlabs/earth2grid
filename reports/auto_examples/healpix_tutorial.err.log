Traceback (most recent call last):
  File "/Users/nbrenowitz/workspace/nvidia/earth2grid/.venv/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/nbrenowitz/workspace/nvidia/earth2grid/.venv/lib/python3.12/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/nbrenowitz/workspace/nvidia/earth2grid/.venv/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/nbrenowitz/.local/share/uv/python/cpython-3.12.10-macos-aarch64-none/lib/python3.12/asyncio/base_events.py", line 691, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/nbrenowitz/workspace/nvidia/earth2grid/.venv/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/Users/nbrenowitz/workspace/nvidia/earth2grid/.venv/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/nbrenowitz/workspace/nvidia/earth2grid/.venv/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
zonal_avg = healpix.zonal_average(field)

# Plot the zonal average
plt.figure(figsize=(8, 4))
plt.plot(grid.lat[::100], zonal_avg[::100])  # Plot every 100th point for clarity
plt.xlabel('Latitude (degrees)')
plt.ylabel('Zonal Average')
plt.title('Zonal Average of Sample Field')
plt.grid(True)
plt.show()
------------------


[31m---------------------------------------------------------------------------[39m
[31mValueError[39m                                Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[3][39m[32m, line 5[39m
[32m      3[39m [38;5;66;03m# Plot the zonal average[39;00m
[32m      4[39m plt.figure(figsize=([32m8[39m, [32m4[39m))
[32m----> [39m[32m5[39m [43mplt[49m[43m.[49m[43mplot[49m[43m([49m[43mgrid[49m[43m.[49m[43mlat[49m[43m[[49m[43m:[49m[43m:[49m[32;43m100[39;49m[43m][49m[43m,[49m[43m [49m[43mzonal_avg[49m[43m[[49m[43m:[49m[43m:[49m[32;43m100[39;49m[43m][49m[43m)[49m  [38;5;66;03m# Plot every 100th point for clarity[39;00m
[32m      6[39m plt.xlabel([33m'[39m[33mLatitude (degrees)[39m[33m'[39m)
[32m      7[39m plt.ylabel([33m'[39m[33mZonal Average[39m[33m'[39m)

[36mFile [39m[32m~/workspace/nvidia/earth2grid/.venv/lib/python3.12/site-packages/matplotlib/pyplot.py:3838[39m, in [36mplot[39m[34m(scalex, scaley, data, *args, **kwargs)[39m
[32m   3830[39m [38;5;129m@_copy_docstring_and_deprecators[39m(Axes.plot)
[32m   3831[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mplot[39m(
[32m   3832[39m     *args: [38;5;28mfloat[39m | ArrayLike | [38;5;28mstr[39m,
[32m   (...)[39m[32m   3836[39m     **kwargs,
[32m   3837[39m ) -> [38;5;28mlist[39m[Line2D]:
[32m-> [39m[32m3838[39m     [38;5;28;01mreturn[39;00m [43mgca[49m[43m([49m[43m)[49m[43m.[49m[43mplot[49m[43m([49m
[32m   3839[39m [43m        [49m[43m*[49m[43margs[49m[43m,[49m
[32m   3840[39m [43m        [49m[43mscalex[49m[43m=[49m[43mscalex[49m[43m,[49m
[32m   3841[39m [43m        [49m[43mscaley[49m[43m=[49m[43mscaley[49m[43m,[49m
[32m   3842[39m [43m        [49m[43m*[49m[43m*[49m[43m([49m[43m{[49m[33;43m"[39;49m[33;43mdata[39;49m[33;43m"[39;49m[43m:[49m[43m [49m[43mdata[49m[43m}[49m[43m [49m[38;5;28;43;01mif[39;49;00m[43m [49m[43mdata[49m[43m [49m[38;5;129;43;01mis[39;49;00m[43m [49m[38;5;129;43;01mnot[39;49;00m[43m [49m[38;5;28;43;01mNone[39;49;00m[43m [49m[38;5;28;43;01melse[39;49;00m[43m [49m[43m{[49m[43m}[49m[43m)[49m[43m,[49m
[32m   3843[39m [43m        [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m,[49m
[32m   3844[39m [43m    [49m[43m)[49m

[36mFile [39m[32m~/workspace/nvidia/earth2grid/.venv/lib/python3.12/site-packages/matplotlib/axes/_axes.py:1777[39m, in [36mAxes.plot[39m[34m(self, scalex, scaley, data, *args, **kwargs)[39m
[32m   1534[39m [38;5;250m[39m[33;03m"""[39;00m
[32m   1535[39m [33;03mPlot y versus x as lines and/or markers.[39;00m
[32m   1536[39m 
[32m   (...)[39m[32m   1774[39m [33;03m(``'green'``) or hex strings (``'#008000'``).[39;00m
[32m   1775[39m [33;03m"""[39;00m
[32m   1776[39m kwargs = cbook.normalize_kwargs(kwargs, mlines.Line2D)
[32m-> [39m[32m1777[39m lines = [*[38;5;28mself[39m._get_lines([38;5;28mself[39m, *args, data=data, **kwargs)]
[32m   1778[39m [38;5;28;01mfor[39;00m line [38;5;129;01min[39;00m lines:
[32m   1779[39m     [38;5;28mself[39m.add_line(line)

[36mFile [39m[32m~/workspace/nvidia/earth2grid/.venv/lib/python3.12/site-packages/matplotlib/axes/_base.py:297[39m, in [36m_process_plot_var_args.__call__[39m[34m(self, axes, data, return_kwargs, *args, **kwargs)[39m
[32m    295[39m     this += args[[32m0[39m],
[32m    296[39m     args = args[[32m1[39m:]
[32m--> [39m[32m297[39m [38;5;28;01myield from[39;00m [38;5;28;43mself[39;49m[43m.[49m[43m_plot_args[49m[43m([49m
[32m    298[39m [43m    [49m[43maxes[49m[43m,[49m[43m [49m[43mthis[49m[43m,[49m[43m [49m[43mkwargs[49m[43m,[49m[43m [49m[43mambiguous_fmt_datakey[49m[43m=[49m[43mambiguous_fmt_datakey[49m[43m,[49m
[32m    299[39m [43m    [49m[43mreturn_kwargs[49m[43m=[49m[43mreturn_kwargs[49m
[32m    300[39m [43m[49m[43m)[49m

[36mFile [39m[32m~/workspace/nvidia/earth2grid/.venv/lib/python3.12/site-packages/matplotlib/axes/_base.py:494[39m, in [36m_process_plot_var_args._plot_args[39m[34m(self, axes, tup, kwargs, return_kwargs, ambiguous_fmt_datakey)[39m
[32m    491[39m     axes.yaxis.update_units(y)
[32m    493[39m [38;5;28;01mif[39;00m x.shape[[32m0[39m] != y.shape[[32m0[39m]:
[32m--> [39m[32m494[39m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([33mf[39m[33m"[39m[33mx and y must have same first dimension, but [39m[33m"[39m
[32m    495[39m                      [33mf[39m[33m"[39m[33mhave shapes [39m[38;5;132;01m{[39;00mx.shape[38;5;132;01m}[39;00m[33m and [39m[38;5;132;01m{[39;00my.shape[38;5;132;01m}[39;00m[33m"[39m)
[32m    496[39m [38;5;28;01mif[39;00m x.ndim > [32m2[39m [38;5;129;01mor[39;00m y.ndim > [32m2[39m:
[32m    497[39m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([33mf[39m[33m"[39m[33mx and y can be no greater than 2D, but have [39m[33m"[39m
[32m    498[39m                      [33mf[39m[33m"[39m[33mshapes [39m[38;5;132;01m{[39;00mx.shape[38;5;132;01m}[39;00m[33m and [39m[38;5;132;01m{[39;00my.shape[38;5;132;01m}[39;00m[33m"[39m)

[31mValueError[39m: x and y must have same first dimension, but have shapes (31,) and (1,)

